"use strict";(self.webpackChunkgo_labx_docs=self.webpackChunkgo_labx_docs||[]).push([[1611],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,s(s({ref:n},p),{},{components:t})):r.createElement(f,s({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6915:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},s="Using Success and Fail Methods",i={unversionedId:"examples/success_and_fail",id:"examples/success_and_fail",title:"Using Success and Fail Methods",description:"In addition to basic methods such as JSON, Text, and XML, the Lightning framework provides two convenient methods, Success and Fail, for standardizing HTTP response data formats.",source:"@site/docs/examples/success_and_fail.md",sourceDirName:"examples",slug:"/examples/success_and_fail",permalink:"/docs/examples/success_and_fail",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom not found",permalink:"/docs/examples/custom_not_found"},next:{title:"CLI Tool",permalink:"/docs/cli"}},c={},l=[],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-success-and-fail-methods"},"Using Success and Fail Methods"),(0,a.kt)("p",null,"In addition to basic methods such as ",(0,a.kt)("inlineCode",{parentName:"p"},"JSON"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Text"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"XML"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"Lightning")," framework provides two convenient methods, ",(0,a.kt)("inlineCode",{parentName:"p"},"Success")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Fail"),", for standardizing HTTP response data formats."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "github.com/go-labx/lightning"\n)\n\nfunc main() {\n    app := lightning.DefaultApp()\n\n    app.Get("/success", func(ctx *lightning.Context) {\n        ctx.Success("hello world")\n    })\n\n    app.Get("/fail", func(ctx *lightning.Context) {\n        ctx.Fail(9999, "network error")\n    })\n\n    app.Run()\n}\n')),(0,a.kt)("p",null,"The Success method returns data in the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "code": 0,\n  "data": "hello world",\n  "msg": "ok"\n}\n')),(0,a.kt)("p",null,"The Fail method returns data in the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "code": 9999,\n  "msg": "network error"\n}\n')))}d.isMDXComponent=!0}}]);