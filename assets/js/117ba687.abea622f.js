"use strict";(self.webpackChunkgo_labx_github_io=self.webpackChunkgo_labx_github_io||[]).push([[396],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(1163),r=(n(9496),n(9613));const o={},i="Contextual data",s={unversionedId:"examples/contextual-data",id:"examples/contextual-data",title:"Contextual data",description:"The lightning package provides a Contextual data that is used to store data that can be accessed by all the middleware functions and the route handlers. The SetData method is used to set data in the context, and the GetData method is used to retrieve data from the context.",source:"@site/docs/examples/contextual-data.md",sourceDirName:"examples",slug:"/examples/contextual-data",permalink:"/docs/examples/contextual-data",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Validation",permalink:"/docs/validation"},next:{title:"Cookie",permalink:"/docs/examples/cookie"}},c={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contextual-data"},"Contextual data"),(0,r.kt)("p",null,"The lightning package provides a Contextual data that is used to ",(0,r.kt)("strong",{parentName:"p"},"store data that can be accessed by all the middleware functions and the route handlers"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"SetData")," method is used to set data in the context, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"GetData")," method is used to retrieve data from the context."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/go-labx/lightning"\n    "net/http"\n)\n\nfunc main() {\n    app := lightning.NewApp()\n\n    app.Use(func(ctx *lightning.Context) {\n        ctx.SetData("session", map[string]interface{}{\n            "userId":   123,\n            "username": "Jack",\n        })\n        ctx.Next()\n    })\n\n    app.Use(func(ctx *lightning.Context) {\n        session := ctx.GetData("session")\n        // write your logic here\n        ctx.Next()\n    })\n\n    app.Get("/api/user", func(ctx *lightning.Context) {\n        session := ctx.GetData("session")\n        // write your logic here\n\n        ctx.Text(200, "hello world")\n    })\n\n    app.Run()\n}\n')),(0,r.kt)("p",null,"In the given code, two middleware functions are used. The first middleware function sets a session data in the context with a ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),". The second middleware function retrieves the session data from the context and does some logic with it. The session data is also retrieved in the route handler function."))}u.isMDXComponent=!0}}]);