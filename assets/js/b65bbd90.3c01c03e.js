"use strict";(self.webpackChunkgo_labx_github_io=self.webpackChunkgo_labx_github_io||[]).push([[5721],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),u=a,g=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return r?n.createElement(g,o(o({ref:t},p),{},{components:r})):n.createElement(g,o({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},643:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(1163),a=(r(9496),r(9613));const i={},o="Middleware",l={unversionedId:"middlewares/introduction",id:"middlewares/introduction",title:"Middleware",description:"| Middleware | Description | Repository |",source:"@site/docs/middlewares/introduction.md",sourceDirName:"middlewares",slug:"/middlewares/introduction",permalink:"/docs/middlewares/introduction",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"middlewareSidebar",next:{title:"requestid",permalink:"/docs/middlewares/requestid"}},d={},s=[],p={toc:s},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Middleware"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Repository"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/middlewares/requestid"},"requestid")),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"Lightning")," Request ID middleware is designed to provide unique request IDs for every incoming request and add them to logs and response headers."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/lightning-contrib/requestid"},"https://github.com/lightning-contrib/requestid"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/middlewares/compress"},"compress")),(0,a.kt)("td",{parentName:"tr",align:null},"This is a middleware for ",(0,a.kt)("inlineCode",{parentName:"td"},"Lightning")," that provides compression for HTTP responses. It supports four compression algorithms: ",(0,a.kt)("inlineCode",{parentName:"td"},"Brotli"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"Deflate"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"Gzip"),", and ",(0,a.kt)("inlineCode",{parentName:"td"},"Zstd"),"."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/lightning-contrib/compress"},"https://github.com/lightning-contrib/compress"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/middlewares/cors"},"cors")),(0,a.kt)("td",{parentName:"tr",align:null},"This package provides a middleware that can be used to enable CORS in a ",(0,a.kt)("inlineCode",{parentName:"td"},"Lightning")," web application. The middleware can be configured with various options to allow specific origins, HTTP methods, headers, and more."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/lightning-contrib/cors"},"https://github.com/lightning-contrib/cors"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/middlewares/static"},"static")),(0,a.kt)("td",{parentName:"tr",align:null},"The static middleware is a Go package that provides a middleware for serving static files over HTTP."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/lightning-contrib/static"},"https://github.com/lightning-contrib/static"))))))}m.isMDXComponent=!0}}]);