"use strict";(self.webpackChunkgo_labx_github_io=self.webpackChunkgo_labx_github_io||[]).push([[6765],{9613:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8392:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(1163),a=(r(9496),r(9613));const o={},i="cors",l={unversionedId:"middlewares/cors",id:"middlewares/cors",title:"cors",description:"CORS (Cross-Origin Resource Sharing) is a security feature implemented in web browsers that restricts web pages from making requests to a different domain than the one that served the web page. CORS middleware is used to enable cross-origin requests in web applications.",source:"@site/docs/middlewares/cors.md",sourceDirName:"middlewares",slug:"/middlewares/cors",permalink:"/docs/middlewares/cors",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"middlewareSidebar",previous:{title:"compress",permalink:"/docs/middlewares/compress"},next:{title:"static",permalink:"/docs/middlewares/static"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"API Documentation",id:"api-documentation",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cors"},"cors"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"CORS (Cross-Origin Resource Sharing)")," is a security feature implemented in web browsers that restricts web pages from making requests to a different domain than the one that served the web page. CORS middleware is used to enable cross-origin requests in web applications."),(0,a.kt)("p",null,"This package provides a middleware that can be used to enable CORS in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Lightning")," go web application. The middleware can be configured with various options to allow specific origins, HTTP methods, headers, and more."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go get github.com/lightning-contrib/cors\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To use the cors middleware in your Go web application, you can import the cors package and add the middleware to your middleware chain. Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "github.com/go-labx/lightning"\n    "github.com/lightning-contrib/cors"\n)\n\nfunc main() {\n    app := lightning.DefaultApp()\n\n    // Add the CORS middleware to the middleware chain\n    app.Use(cors.Default())\n\n    // Add your routes here\n    app.Get("/ping", func(ctx *lightning.Context) {\n        ctx.Success("hello world")\n    })\n\n    // Start the server\n    app.Run()\n}\n')),(0,a.kt)("p",null,"By default, the cors middleware allows all origins (",(0,a.kt)("inlineCode",{parentName:"p"},"*"),"), all HTTP methods (GET, POST, PUT, DELETE), all headers (",(0,a.kt)("em",{parentName:"p"},"), and exposes all headers ("),"). You can customize these options by using the various option functions provided by the cors package."),(0,a.kt)("p",null,"Here's an example of how to customize the allowed origins:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'app.Use(cors.New(\n    cors.AllowOrigin([]string{"https://example.com", "https://www.example.com"}),\n))\n')),(0,a.kt)("p",null,"This will allow requests from ",(0,a.kt)("a",{parentName:"p",href:"https://example.com"},"https://example.com")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.example.com"},"https://www.example.com"),"."),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("p",null,"The cors middleware can be customized with the following options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AllowOrigin([]string): Sets the allowed origins. By default, all origins are allowed (*)."),(0,a.kt)("li",{parentName:"ul"},"AllowMethods([]string): Sets the allowed HTTP methods. By default, GET, POST, PUT, and DELETE are allowed."),(0,a.kt)("li",{parentName:"ul"},"AllowHeaders([]string): Sets the allowed headers. By default, all headers are allowed (*)."),(0,a.kt)("li",{parentName:"ul"},"ExposeHeaders([]string): Sets the exposed headers. By default, all headers are exposed (*)."),(0,a.kt)("li",{parentName:"ul"},"SetMaxAge(int): Sets the max age in seconds for preflight requests. By default, the max age is set to 3600 seconds (1 hour)."),(0,a.kt)("li",{parentName:"ul"},"AllowCredentials(bool): Sets whether credentials are allowed. By default, credentials are allowed.")),(0,a.kt)("h2",{id:"api-documentation"},"API Documentation"),(0,a.kt)("p",null,"For detailed API documentation and usage examples, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/lightning-contrib/cors"},"documentation"),"."))}u.isMDXComponent=!0}}]);